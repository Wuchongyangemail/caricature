<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.w.volunteer.mapper.SchoolMapper">

    <resultMap id="BaseResultMap" type="com.w.volunteer.pojo.common.School">
        <result column="id" jdbcType="BIGINT" property="id" />
        <result column="schoolName" jdbcType="VARCHAR" property="schoolName" />
        <result column="areaId" jdbcType="VARCHAR" property="areaId" />
        <result column="volunteerCode" jdbcType="VARCHAR" property="volunteerCode" />
    </resultMap>

    <select id="findById" parameterType="java.lang.Long" resultType="com.w.volunteer.pojo.common.School">
       select * from school
       where id = #{id}
       limit 1
    </select>

    <select id="findByName" parameterType="java.lang.String" resultType="com.w.volunteer.pojo.common.School">
       select * from school
       where schoolName like CONCAT('%',#{name},'%')
       limit 1
    </select>

    <insert id="create" parameterType="com.w.volunteer.pojo.common.School">
        insert into school(
        schoolName,
        areaId,
        volunteerCode
        ) values(
        #{schoolName},
        #{areaId},
        #{volunteerCode}
        )
    </insert>

    <insert id="createVerification" parameterType="com.w.volunteer.pojo.common.Verification">
        insert into verification(
        usercode,
        password,
        email,
        createTime,
        code
        ) values(
        #{usercode},
        #{password},
        #{email},
        #{createTime},
        #{code}
        )
    </insert>

    <insert id="batchCreate" parameterType="list">
        insert into school(
            schoolName,
            areaId,
            volunteerCode
        ) values
        <foreach collection="list" item="item" separator=",">
            (
                #{item.schoolName},
                #{item.areaId},
                #{item.volunteerCode}
            )
        </foreach>
    </insert>

    <select id="searchCollege" resultType="com.w.volunteer.pojo.result.CollegeDto" parameterType="com.w.volunteer.pojo.param.SearchParam">
        select max(s1.grade - s2.score) as 'maxGrade', avg(s1.grade - s2.score) as 'avgGrade', min(s1.grade - s2.score) as 'minGrade', min(s1.rank) as 'maxRank', avg(s1.rank) as 'avgRank', max(s1.rank) as 'minRank', s1.volunteerCode as 'volunteerCode'
        from grade s1
        left join controlLine s2 on s1.year = s2.year and s1.areaId = s2.areaId  and s1.batch = s2.batch and s1.department = s2.department
        where s1.batch = #{batch} and s1.department = #{department} and s1.areaId = #{areaId}
        <if test="search != null and search != ''">
            and (schoolName LIKE CONCAT('%',#{search},'%'))
        </if>
        group by s1.volunteerCode
    </select>

    <select id="findByVolunteerCode" parameterType="java.lang.String" resultType="com.w.volunteer.pojo.common.School">
        select * from school
        where volunteerCode = #{volunteerCode}
    </select>

    <select id="findByUserCode" parameterType="java.lang.String" resultType="com.w.volunteer.pojo.common.User">
        select * from user
        where userNumber = #{userName}
    </select>

    <select id="findByLoginParam" parameterType="com.w.volunteer.pojo.param.LoginParam" resultType="com.w.volunteer.pojo.common.Verification">
        select * from verification
        where usercode = #{userCode}
        and password = #{password}
        and email = #{email}
        order by createTime desc
        limit 1
    </select>

    <insert id="createUser" parameterType="com.w.volunteer.pojo.common.User">
        insert into user(
        userNumber,
        password,
        email,
        createTime
        ) values(
        #{userNumber},
        #{password},
        #{email},
        NOW()
        )
    </insert>
</mapper>